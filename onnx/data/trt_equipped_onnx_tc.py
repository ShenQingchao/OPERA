make_graph(op_type='Constant', kwargs={'value': '[2.]'}, input_name=('x', 'shape'), input_shape=([10, 7, 3], [3]), input_dtype=('FLOAT', 'INT64'), output_name=('y',), output_shape=([20, 10, 3],), output_dtype=('FLOAT',))
make_graph(op_type='Expand', kwargs={}, input_name=('X', 'shape'), input_shape=([1, 3, 1], [3]), input_dtype=('FLOAT', 'INT64'), output_name=('Y',), output_shape=([3, 3, 3],), output_dtype=('FLOAT',))
make_graph(op_type='AveragePool', kwargs={'kernel_shape': [5, 5], 'strides': [3, 3]}, input_name=('x',), input_shape=([1, 3, 32, 32],), input_dtype=('FLOAT',), output_name=('y',), output_shape=([1, 3, 10, 10],), output_dtype=('FLOAT',))
make_graph(op_type='Identity', kwargs={}, input_name=('X',), input_shape=([64, 64],), input_dtype=('FLOAT',), output_name=('identity_out_2',), output_shape=([],), output_dtype=('FLOAT',))
make_graph(op_type='StringNormalizer', kwargs={'case_change_action': b'LOWER', 'is_case_sensitive': 1, 'stopwords': [b'monday']}, input_name=('x',), input_shape=([4],), input_dtype=('STRING',), output_name=('y',), output_shape=([3],), output_dtype=('STRING',))
make_graph(op_type='Add', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=('add_out_2',), output_shape=([],), output_dtype=('FLOAT',))
make_graph(op_type='Add', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='ArgMin', kwargs={'keepdims': 1}, input_name=('data',), input_shape=([2, 3, 4],), input_dtype=('FLOAT',), output_name=('result',), output_shape=([1, 3, 4],), output_dtype=('INT64',))
make_graph(op_type='Pow', kwargs={}, input_name=('x', 'y'), input_shape=([3], []), input_dtype=('FLOAT', 'FLOAT'), output_name=('z',), output_shape=([3],), output_dtype=('FLOAT',))
make_graph(op_type='Shape', kwargs={}, input_name=('input',), input_shape=([],), input_dtype=('FLOAT',), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='If', kwargs={'then_branch': "make_graph(op_type='Add', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=('res',), output_shape=([1, 1],), output_dtype=('FLOAT',))", 'else_branch': "make_graph(op_type='Add', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=('res',), output_shape=([1, 1],), output_dtype=('FLOAT',))"}, input_name=('x0',), input_shape=([1, 1],), input_dtype=('FLOAT',), output_name=('out',), output_shape=([1, 1],), output_dtype=('FLOAT',))
make_graph(op_type='BitwiseXor', kwargs={}, input_name=('x', 'y'), input_shape=([3, 4, 5], [5]), input_dtype=('UINT64', 'UINT64'), output_name=('bitwisexor',), output_shape=([3, 4, 5],), output_dtype=('UINT64',))
make_graph(op_type='ArgMax', kwargs={'axis': 1, 'keepdims': 1}, input_name=('data',), input_shape=([2, 3, 4],), input_dtype=('FLOAT',), output_name=('result',), output_shape=([2, 1, 4],), output_dtype=('INT64',))
make_graph(op_type='Add', kwargs={}, input_name=('input',), input_shape=([1, 3],), input_dtype=('FLOAT',), output_name=('add_out_5',), output_shape=([],), output_dtype=('FLOAT',))
make_graph(op_type='Add', kwargs={}, input_name=('x', 'y'), input_shape=([3, 4, 5], [5]), input_dtype=('FLOAT', 'FLOAT'), output_name=('sum',), output_shape=([3, 4, 5],), output_dtype=('FLOAT',))
make_graph(op_type='Identity', kwargs={}, input_name=('X',), input_shape=([1, 3, 5, 5],), input_dtype=('FLOAT',), output_name=('Var500',), output_shape=([1, 3, 5, 5],), output_dtype=('FLOAT',))
make_graph(op_type='Constant', kwargs={'value': '[[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]]'}, input_name=(), input_shape=(), input_dtype=(), output_name=('const_out',), output_shape=([14, 14],), output_dtype=('FLOAT',))
make_graph(op_type='Constant', kwargs={'value': '[[1. 1. 1. 1.]\n [1. 1. 1. 1.]\n [1. 1. 1. 1.]\n [1. 1. 1. 1.]]'}, input_name=(), input_shape=(), input_dtype=(), output_name=('identity_out_4',), output_shape=([4, 4],), output_dtype=('FLOAT',))
make_graph(op_type='BitShift', kwargs={'direction': b'LEFT'}, input_name=('x', 'y'), input_shape=([3], [3]), input_dtype=('UINT16', 'UINT16'), output_name=('z',), output_shape=([3],), output_dtype=('UINT16',))
make_graph(op_type='InstanceNormalization', kwargs={'epsilon': 0.009999999776482582}, input_name=('x', 's', 'bias'), input_shape=([2, 3, 4, 5], [3], [3]), input_dtype=('FLOAT', 'FLOAT', 'FLOAT'), output_name=('y',), output_shape=([2, 3, 4, 5],), output_dtype=('FLOAT',))
make_graph(op_type='AveragePool', kwargs={'ceil_mode': 1, 'kernel_shape': [3, 3], 'strides': [2, 2]}, input_name=('x',), input_shape=([1, 1, 4, 4],), input_dtype=('FLOAT',), output_name=('y',), output_shape=([1, 1, 2, 2],), output_dtype=('FLOAT',))
make_graph(op_type='Cast', kwargs={'to': 1}, input_name=('X',), input_shape=([1],), input_dtype=('INT32',), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='Cast', kwargs={'to': 1}, input_name=('input', 'like'), input_shape=([3, 4], [1]), input_dtype=('DOUBLE', 'FLOAT'), output_name=('output',), output_shape=([3, 4],), output_dtype=('FLOAT',))
make_graph(op_type='Identity', kwargs={}, input_name=('X', 'Y'), input_shape=([1], [1]), input_dtype=('FLOAT', 'FLOAT'), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='Add', kwargs={}, input_name=('input',), input_shape=([1, 3],), input_dtype=('FLOAT',), output_name=('output',), output_shape=([1, 3],), output_dtype=('FLOAT',))
make_graph(op_type='Asinh', kwargs={}, input_name=('x',), input_shape=([3, 4, 5],), input_dtype=('FLOAT',), output_name=('y',), output_shape=([3, 4, 5],), output_dtype=('FLOAT',))
make_graph(op_type='BitShift', kwargs={'direction': b'RIGHT'}, input_name=('x', 'y'), input_shape=([3], [3]), input_dtype=('UINT64', 'UINT64'), output_name=('z',), output_shape=([3],), output_dtype=('UINT64',))
make_graph(op_type='Identity', kwargs={}, input_name=('x',), input_shape=([1, 1, 2, 2],), input_dtype=('FLOAT',), output_name=('y',), output_shape=([1, 1, 2, 2],), output_dtype=('FLOAT',))
make_graph(op_type='LSTM', kwargs={'direction': b'forward', 'hidden_size': 5}, input_name=('X',), input_shape=([4, 3, 6],), input_dtype=('FLOAT',), output_name=('Y', 'Y_h', 'Y_c'), output_shape=([4, 1, 3, 5], [1, 3, 5], [1, 3, 5]), output_dtype=('FLOAT', 'FLOAT', 'FLOAT'))
make_graph(op_type='Constant', kwargs={'value': '[[[1 1 1]\n  [1 1 1]\n  [1 1 1]]]'}, input_name=(), input_shape=(), input_dtype=(), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='Add', kwargs={}, input_name=('inp',), input_shape=([4, 4],), input_dtype=('FLOAT',), output_name=('add_out_0',), output_shape=([],), output_dtype=('FLOAT',))
make_graph(op_type='Shape', kwargs={}, input_name=('input',), input_shape=([0, 3, 0, 0],), input_dtype=('FLOAT',), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='Identity', kwargs={}, input_name=('X0', 'Y0'), input_shape=([1], [1]), input_dtype=('FLOAT', 'FLOAT'), output_name=('identity_out_6', 'identity_out_8'), output_shape=([1], [1]), output_dtype=('FLOAT', 'FLOAT'))
make_graph(op_type='Cast', kwargs={'to': 1}, input_name=('X',), input_shape=([1],), input_dtype=('INT64',), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='Constant', kwargs={'value': '[[[[1. 1. 1.]\n   [1. 1. 1.]\n   [1. 1. 1.]]\n\n  [[1. 1. 1.]\n   [1. 1. 1.]\n   [1. 1. 1.]]\n\n  [[1. 1. 1.]\n   [1. 1. 1.]\n   [1. 1. 1.]]]\n\n\n [[[1. 1. 1.]\n   [1. 1. 1.]\n   [1. 1. 1.]]\n\n  [[1. 1. 1.]\n   [1. 1. 1.]\n   [1. 1. 1.]]\n\n  [[1. 1. 1.]\n   [1. 1. 1.]\n   [1. 1. 1.]]]\n\n\n [[[1. 1. 1.]\n   [1. 1. 1.]\n   [1. 1. 1.]]\n\n  [[1. 1. 1.]\n   [1. 1. 1.]\n   [1. 1. 1.]]\n\n  [[1. 1. 1.]\n   [1. 1. 1.]\n   [1. 1. 1.]]]]'}, input_name=('Input',), input_shape=([1, 3, 10, 10],), input_dtype=('FLOAT',), output_name=('conv_out_13',), output_shape=([],), output_dtype=('FLOAT',))
make_graph(op_type='BitShift', kwargs={'direction': b'LEFT'}, input_name=('x', 'y'), input_shape=([3], [3]), input_dtype=('UINT64', 'UINT64'), output_name=('z',), output_shape=([3],), output_dtype=('UINT64',))
make_graph(op_type='Shape', kwargs={}, input_name=('var',), input_shape=([0, -1, 0, 4],), input_dtype=('FLOAT',), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='Identity', kwargs={}, input_name=('x',), input_shape=([2, 4, 3, 3],), input_dtype=('FLOAT',), output_name=('y',), output_shape=([],), output_dtype=('FLOAT',))
make_graph(op_type='Identity', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='Concat', kwargs={'axis': -1}, input_name=('value0', 'value1'), input_shape=([2], [2]), input_dtype=('FLOAT', 'FLOAT'), output_name=('output',), output_shape=([4],), output_dtype=('FLOAT',))
make_graph(op_type='Identity', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=('identity_out_0',), output_shape=([],), output_dtype=('FLOAT',))
make_graph(op_type='BitShift', kwargs={'direction': b'LEFT'}, input_name=('x', 'y'), input_shape=([3], [3]), input_dtype=('UINT32', 'UINT32'), output_name=('z',), output_shape=([3],), output_dtype=('UINT32',))
make_graph(op_type='Add', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=('add_out_0',), output_shape=([],), output_dtype=('FLOAT',))
make_graph(op_type='Add', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=('f',), output_shape=([],), output_dtype=('FLOAT',))
make_graph(op_type='Add', kwargs={}, input_name=('input',), input_shape=([1, 3],), input_dtype=('FLOAT',), output_name=('out',), output_shape=([],), output_dtype=('FLOAT',))
make_graph(op_type='NonZero', kwargs={}, input_name=('input',), input_shape=([4],), input_dtype=('INT64',), output_name=('nonzero_out_0',), output_shape=([],), output_dtype=('INT64',))
make_graph(op_type='Shape', kwargs={}, input_name=('var', 'var2'), input_shape=([1, 3, 4], []), input_dtype=('FLOAT', 'FLOAT'), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='Constant', kwargs={'value': '[2.]'}, input_name=('x', 'shape'), input_shape=([20, 8, 3], [3]), input_dtype=('FLOAT', 'INT64'), output_name=('y',), output_shape=([10, 10, 3],), output_dtype=('FLOAT',))
make_graph(op_type='Shape', kwargs={}, input_name=('data',), input_shape=([-1, 3, 5, 5],), input_dtype=('FLOAT',), output_name=('output',), output_shape=([],), output_dtype=('FLOAT',))
make_graph(op_type='ArgMin', kwargs={'keepdims': 1}, input_name=('data',), input_shape=([2, 2],), input_dtype=('FLOAT',), output_name=('result',), output_shape=([1, 2],), output_dtype=('INT64',))
make_graph(op_type='BitwiseXor', kwargs={}, input_name=('x', 'y'), input_shape=([3, 4], [3, 4]), input_dtype=('INT32', 'INT32'), output_name=('bitwisexor',), output_shape=([3, 4],), output_dtype=('INT32',))
make_graph(op_type='Expand', kwargs={}, input_name=('X', 'shape'), input_shape=([1, 3, 1], [2]), input_dtype=('FLOAT', 'INT64'), output_name=('Y',), output_shape=([1, 3, 1],), output_dtype=('FLOAT',))
make_graph(op_type='Shape', kwargs={}, input_name=('var',), input_shape=([1, 3, 4],), input_dtype=('FLOAT',), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='FAKE!', kwargs={}, input_name=('A', 'A1'), input_shape=([5, 5, 5], [5, 5, 5]), input_dtype=('DOUBLE', 'DOUBLE'), output_name=('D2',), output_shape=([5, 5, 5],), output_dtype=('DOUBLE',))
make_graph(op_type='Add', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=('relu_out_2',), output_shape=([],), output_dtype=('FLOAT',))
make_graph(op_type='Relu', kwargs={}, input_name=('x',), input_shape=([1, 2],), input_dtype=('FLOAT',), output_name=('y',), output_shape=([1, 2],), output_dtype=('FLOAT',))
make_graph(op_type='Atan', kwargs={}, input_name=('x',), input_shape=([3, 4, 5],), input_dtype=('FLOAT',), output_name=('y',), output_shape=([3, 4, 5],), output_dtype=('FLOAT',))
make_graph(op_type='ArgMax', kwargs={'keepdims': 1}, input_name=('data',), input_shape=([2, 3, 4],), input_dtype=('FLOAT',), output_name=('result',), output_shape=([1, 3, 4],), output_dtype=('INT64',))
make_graph(op_type='Cast', kwargs={'to': 1}, input_name=('inp',), input_shape=([1],), input_dtype=('INT64',), output_name=('cast_out_6',), output_shape=([],), output_dtype=('INT64',))
make_graph(op_type='Add', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=('c', 'e'), output_shape=([], []), output_dtype=('FLOAT', 'FLOAT'))
make_graph(op_type='CastLike', kwargs={}, input_name=('input', 'like'), input_shape=([3, 4], [1]), input_dtype=('DOUBLE', 'FLOAT'), output_name=('output',), output_shape=([3, 4],), output_dtype=('FLOAT',))
make_graph(op_type='Add', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=('res',), output_shape=([1, 1],), output_dtype=('FLOAT',))
make_graph(op_type='StringNormalizer', kwargs={'is_case_sensitive': 1, 'stopwords': [b'monday']}, input_name=('x',), input_shape=([4],), input_dtype=('STRING',), output_name=('y',), output_shape=([3],), output_dtype=('STRING',))
make_graph(op_type='Compress', kwargs={'axis': -1}, input_name=('input', 'condition'), input_shape=([3, 2], [2]), input_dtype=('FLOAT', 'BOOL'), output_name=('output',), output_shape=([3, 1],), output_dtype=('FLOAT',))
make_graph(op_type='Add', kwargs={}, input_name=('sum_in', 'next'), input_shape=([2], [2]), input_dtype=('FLOAT', 'FLOAT'), output_name=('sum_out', 'scan_out'), output_shape=([2], [2]), output_dtype=('FLOAT', 'FLOAT'))
make_graph(op_type='Add', kwargs={'fake_attr': 0}, input_name=(), input_shape=(), input_dtype=(), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='Identity', kwargs={}, input_name=('input',), input_shape=([4, 5],), input_dtype=('FLOAT',), output_name=('identity_out_5', 'split_out_1_3'), output_shape=([], []), output_dtype=('FLOAT', 'FLOAT'))
make_graph(op_type='Add', kwargs={}, input_name=('input0',), input_shape=([1, 3],), input_dtype=('FLOAT',), output_name=('input1',), output_shape=([1, 3],), output_dtype=('FLOAT',))
make_graph(op_type='Clip', kwargs={}, input_name=('x',), input_shape=([3],), input_dtype=('FLOAT',), output_name=('y',), output_shape=([3],), output_dtype=('FLOAT',))
make_graph(op_type='Reshape', kwargs={}, input_name=('data',), input_shape=([4, 4],), input_dtype=('FLOAT',), output_name=('reshape_out_1',), output_shape=([],), output_dtype=('FLOAT',))
make_graph(op_type='And', kwargs={}, input_name=('x', 'y'), input_shape=([3, 4], [3, 4]), input_dtype=('BOOL', 'BOOL'), output_name=('and',), output_shape=([3, 4],), output_dtype=('BOOL',))
make_graph(op_type='Shape', kwargs={}, input_name=('input',), input_shape=([0, 3, 5, 7],), input_dtype=('FLOAT',), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='Identity', kwargs={}, input_name=('X',), input_shape=([2, 2],), input_dtype=('FLOAT',), output_name=('Y',), output_shape=([2, 2],), output_dtype=('FLOAT',))
make_graph(op_type='StringNormalizer', kwargs={'case_change_action': b'UPPER', 'is_case_sensitive': 1, 'stopwords': [b'monday']}, input_name=('x',), input_shape=([4],), input_dtype=('STRING',), output_name=('y',), output_shape=([3],), output_dtype=('STRING',))
make_graph(op_type='Expand', kwargs={}, input_name=('data', 'new_shape'), input_shape=([2, 0, 3, 0], [5]), input_dtype=('FLOAT', 'INT64'), output_name=('expanded',), output_shape=([2, 0, 3, 0, 5],), output_dtype=('FLOAT',))
make_graph(op_type='Add-10', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='Add', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=('e', 'c'), output_shape=([], []), output_dtype=('FLOAT', 'FLOAT'))
make_graph(op_type='BitwiseAnd', kwargs={}, input_name=('x', 'y'), input_shape=([3, 4], [3, 4]), input_dtype=('INT32', 'INT32'), output_name=('bitwiseand',), output_shape=([3, 4],), output_dtype=('INT32',))
make_graph(op_type='AveragePool', kwargs={'ceil_mode': 1, 'dilations': [2, 2], 'kernel_shape': [2, 2], 'strides': [1, 1]}, input_name=('x',), input_shape=([1, 1, 4, 4],), input_dtype=('FLOAT',), output_name=('y',), output_shape=([1, 1, 2, 2],), output_dtype=('FLOAT',))
make_graph(op_type='StringNormalizer', kwargs={'is_case_sensitive': 1}, input_name=('x',), input_shape=([2],), input_dtype=('STRING',), output_name=('y',), output_shape=([2],), output_dtype=('STRING',))
make_graph(op_type='CenterCropPad', kwargs={}, input_name=('x', 'shape'), input_shape=([20, 8, 3], [3]), input_dtype=('FLOAT', 'INT64'), output_name=('y',), output_shape=([10, 10, 3],), output_dtype=('FLOAT',))
make_graph(op_type='CastLike', kwargs={}, input_name=('input', 'like'), input_shape=([3, 4], [1]), input_dtype=('DOUBLE', 'FLOAT16'), output_name=('output',), output_shape=([3, 4],), output_dtype=('FLOAT16',))
make_graph(op_type='Add', kwargs={}, input_name=('subgraph_input',), input_shape=([1],), input_dtype=('FLOAT',), output_name=('add_out_0',), output_shape=([],), output_dtype=('FLOAT',))
make_graph(op_type='Add', kwargs={}, input_name=('input',), input_shape=([1, 3, 5, 5],), input_dtype=('FLOAT',), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='Expand', kwargs={}, input_name=('X', 'shape'), input_shape=([1, 3, 1], [2]), input_dtype=('FLOAT', 'INT64'), output_name=('Y',), output_shape=([1, 3, 3],), output_dtype=('FLOAT',))
make_graph(op_type='Cast', kwargs={'to': 1}, input_name=('inp',), input_shape=([1],), input_dtype=('INT64',), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='Atan', kwargs={}, input_name=('x',), input_shape=([3],), input_dtype=('FLOAT',), output_name=('y',), output_shape=([3],), output_dtype=('FLOAT',))
make_graph(op_type='Identity', kwargs={}, input_name=('x',), input_shape=([3],), input_dtype=('FLOAT',), output_name=('y',), output_shape=([3],), output_dtype=('FLOAT',))
make_graph(op_type='Fake', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='Shape', kwargs={}, input_name=('input',), input_shape=([5, 6, 3, 2],), input_dtype=('INT64',), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='Add', kwargs={}, input_name=('subgraph_input',), input_shape=([1],), input_dtype=('FLOAT',), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='BitShift', kwargs={'direction': b'LEFT'}, input_name=('x', 'y'), input_shape=([3], [3]), input_dtype=('UINT8', 'UINT8'), output_name=('z',), output_shape=([3],), output_dtype=('UINT8',))
make_graph(op_type='Identity', kwargs={}, input_name=('X',), input_shape=([1, 2, 0, 0],), input_dtype=('FLOAT',), output_name=('Y',), output_shape=([1, 2, 0, 0],), output_dtype=('FLOAT',))
make_graph(op_type='Add', kwargs={}, input_name=('x', 'y'), input_shape=([3, 4, 5], [3, 4, 5]), input_dtype=('UINT8', 'UINT8'), output_name=('sum',), output_shape=([3, 4, 5],), output_dtype=('UINT8',))
make_graph(op_type='MatMul', kwargs={}, input_name=('x',), input_shape=([1, 1, 256, 256],), input_dtype=('FLOAT',), output_name=('matmul_out_3',), output_shape=([],), output_dtype=('FLOAT',))
make_graph(op_type='Shape', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='Cast', kwargs={'to': 11}, input_name=('input', 'like'), input_shape=([3, 4], [1]), input_dtype=('FLOAT16', 'DOUBLE'), output_name=('output',), output_shape=([3, 4],), output_dtype=('DOUBLE',))
make_graph(op_type='Add', kwargs={}, input_name=('input0', 'input1'), input_shape=([1, 3], [1, 3]), input_dtype=('FLOAT', 'FLOAT'), output_name=('output',), output_shape=([1, 3],), output_dtype=('FLOAT',))
make_graph(op_type='MeanVarianceNormalization', kwargs={'axes': [0]}, input_name=('X',), input_shape=([0, 0, 0],), input_dtype=('FLOAT',), output_name=('Y',), output_shape=([0, 0, 0],), output_dtype=('FLOAT',))
make_graph(op_type='Shape', kwargs={}, input_name=('inp',), input_shape=([1, 3, 10, 10],), input_dtype=('FLOAT',), output_name=('final_reshape',), output_shape=([1, 3, 100],), output_dtype=('FLOAT',))
make_graph(op_type='Identity', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=('cast_b', 'cast_c', 'new_shape', 'cast_new_shape'), output_shape=([1], [1], [3], [3]), output_dtype=('INT64', 'INT64', 'INT64', 'INT64'))
make_graph(op_type='Shape', kwargs={}, input_name=('input',), input_shape=([0, 3, 5, 0],), input_dtype=('FLOAT',), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='Nested', kwargs={'body': "make_graph(op_type='Identity', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=('identity_out_0',), output_shape=([],), output_dtype=('FLOAT',))"}, input_name=(), input_shape=(), input_dtype=(), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='Scan', kwargs={'body': "make_graph(op_type='Add', kwargs={}, input_name=('sum_in', 'next'), input_shape=([2], [2]), input_dtype=('FLOAT', 'FLOAT'), output_name=('sum_out', 'scan_out'), output_shape=([2], [2]), output_dtype=('FLOAT', 'FLOAT'))", 'num_scan_inputs': 1}, input_name=('initial', 'x'), input_shape=([2], [3, 2]), input_dtype=('FLOAT', 'FLOAT'), output_name=('y', 'z'), output_shape=([2], [3, 2]), output_dtype=('FLOAT', 'FLOAT'))
make_graph(op_type='Shape', kwargs={}, input_name=('input',), input_shape=([0, 3, 0, 224],), input_dtype=('FLOAT',), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='Identity', kwargs={}, input_name=('input',), input_shape=([1, 3, 5, 5],), input_dtype=('FLOAT',), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='Nested', kwargs={'body': "make_graph(op_type='Identity', kwargs={}, input_name=('X',), input_shape=([2, 2],), input_dtype=('FLOAT',), output_name=('Y',), output_shape=([2, 2],), output_dtype=('FLOAT',))"}, input_name=('X',), input_shape=([2, 2],), input_dtype=('FLOAT',), output_name=('Y',), output_shape=([2, 2],), output_dtype=('FLOAT',))
make_graph(op_type='Identity', kwargs={}, input_name=('input',), input_shape=([1, 3, 5, 5],), input_dtype=('INT8',), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='ArgMax', kwargs={'keepdims': 1}, input_name=('data',), input_shape=([2, 2],), input_dtype=('FLOAT',), output_name=('result',), output_shape=([1, 2],), output_dtype=('INT64',))
make_graph(op_type='ArgMin', kwargs={'axis': 1, 'keepdims': 1}, input_name=('data',), input_shape=([2, 3, 4],), input_dtype=('FLOAT',), output_name=('result',), output_shape=([2, 1, 4],), output_dtype=('INT64',))
make_graph(op_type='If', kwargs={'then_branch': "make_graph(op_type='Add', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=('relu_out_2',), output_shape=([],), output_dtype=('FLOAT',))", 'else_branch': "make_graph(op_type='Add', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=('add_out_2',), output_shape=([],), output_dtype=('FLOAT',))"}, input_name=('X', 'cond'), input_shape=([1], [1]), input_dtype=('FLOAT', 'BOOL'), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='Fake', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=('e',), output_shape=([],), output_dtype=('FLOAT',))
make_graph(op_type='If', kwargs={'then_branch': "make_graph(op_type='Add', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=('add_out_0',), output_shape=([],), output_dtype=('FLOAT',))", 'else_branch': "make_graph(op_type='Add', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=('add_out_2',), output_shape=([],), output_dtype=('FLOAT',))"}, input_name=('X',), input_shape=([1],), input_dtype=('FLOAT',), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='Shape', kwargs={}, input_name=('input',), input_shape=([0, 3, 224, 224],), input_dtype=('FLOAT',), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='Add', kwargs={}, input_name=('input',), input_shape=([1, 3],), input_dtype=('FLOAT',), output_name=('output',), output_shape=([],), output_dtype=('FLOAT',))
make_graph(op_type='Clip', kwargs={}, input_name=('x', 'min'), input_shape=([3, 4, 5], [1]), input_dtype=('INT8', 'INT8'), output_name=('y',), output_shape=([3, 4, 5],), output_dtype=('INT8',))
make_graph(op_type='Add', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=('c', 'e', 'f'), output_shape=([], [], []), output_dtype=('FLOAT', 'FLOAT', 'FLOAT'))
make_graph(op_type='Add', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=('c',), output_shape=([],), output_dtype=('FLOAT',))
make_graph(op_type='If', kwargs={'then_branch': "make_graph(op_type='Add', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=('add_out_0',), output_shape=([],), output_dtype=('FLOAT',))", 'else_branch': "make_graph(op_type='Add', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=('add_out_2',), output_shape=([],), output_dtype=('FLOAT',))"}, input_name=('X', 'cond'), input_shape=([1], [1]), input_dtype=('FLOAT', 'BOOL'), output_name=(), output_shape=(), output_dtype=())
make_graph(op_type='BitwiseXor', kwargs={}, input_name=('x', 'y'), input_shape=([3, 4, 5], [3, 4, 5]), input_dtype=('INT16', 'INT16'), output_name=('bitwisexor',), output_shape=([3, 4, 5],), output_dtype=('INT16',))
make_graph(op_type='Concat', kwargs={'axis': 0}, input_name=('value0', 'value1'), input_shape=([2], [2]), input_dtype=('FLOAT', 'FLOAT'), output_name=('output',), output_shape=([4],), output_dtype=('FLOAT',))
make_graph(op_type='Add', kwargs={}, input_name=('x', 'y'), input_shape=([3, 4, 5], [3, 4, 5]), input_dtype=('FLOAT', 'FLOAT'), output_name=('sum',), output_shape=([3, 4, 5],), output_dtype=('FLOAT',))
make_graph(op_type='Tile', kwargs={}, input_name=(), input_shape=(), input_dtype=(), output_name=('tile_out_2',), output_shape=([],), output_dtype=('FLOAT',))
make_graph(op_type='Identity', kwargs={}, input_name=('Input:0',), input_shape=([0, 16, 128],), input_dtype=('FLOAT',), output_name=('Output:0',), output_shape=([0, 16, 128],), output_dtype=('FLOAT',))
